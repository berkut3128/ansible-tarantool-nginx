---

- name: apt install nginx
  apt: name=nginx update_cache=yes

- name: Install nginx_dependencies
  apt: name={{ item }} update_cache=yes
  with_items: "{{ nginx_dependencies }}"

- name: Install luajit 
  shell: git clone https://github.com/simpl/ngx_devel_kit /usr/src/nginx-devel-kit && \
         git clone https://github.com/openresty/lua-nginx-module /usr/src/lua-nginx-module && \
         git clone http://luajit.org/git/luajit-2.0.git /usr/src/luajit && \
         git -C /usr/src/luajit checkout tags/v2.0.5 && \
         make -C /usr/src/luajit && \
         make -C /usr/src/luajit install

- name: Install luarocks
  shell: git clone https://github.com/luarocks/luarocks /usr/src/luarocks && \
         ln -s /usr/local/bin/luajit-2.0.5 /usr/local/bin/lua && \
         cd /usr/src/luarocks && \
         ./configure --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/ && \
         make build && \
         make install

- name: Pre-install nginx-tarantool
  shell: cd /root && git clone https://github.com/tarantool/nginx_upstream_module.git /usr/src/nginx_upstream_module && \	  
         git -C /usr/src/nginx_upstream_module submodule init && \
         git -C /usr/src/nginx_upstream_module submodule update && \
         make -C /usr/src/nginx_upstream_module yajl && \
         make -C /usr/src/nginx_upstream_module msgpack && \
         curl -fSL http://nginx.org/download/nginx-1.13.5.tar.gz -o nginx.tar.gz && \
         mkdir -p /usr/src/nginx && tar -xzf nginx.tar.gz -C /usr/src/nginx --strip-components=1

- name: Install nginx-tarantool
  shell: cd /usr/src/nginx && export LUAJIT_LIB=/usr/local/lib && export NGINX_DEVEL_KIT_PATH=/usr/src/nginx-devel-kit && \
         export NGINX_LUA_MODULE_PATH=/usr/src/lua-nginx-module && export LUAJIT_INC=/usr/local/include/luajit-2.0 && \
      ./configure \
      --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include' \
      --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck' \
      --add-module=/usr/src/nginx_upstream_module \
      --prefix=/etc/nginx \
      --sbin-path=/usr/sbin/nginx \
      --modules-path=/usr/lib/nginx/modules \
      --conf-path=/etc/nginx/nginx.conf \
      --error-log-path=/var/log/nginx/error.log \
      --http-log-path=/var/log/nginx/access.log \
      --pid-path=/var/run/nginx.pid \
      --lock-path=/var/run/nginx.lock \
      --http-client-body-temp-path=/var/cache/nginx/client_temp \
      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
      --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
      --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
      --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
      --user=nginx \
      --group=nginx \
      --with-http_ssl_module \
      --with-http_realip_module \
      --with-http_addition_module \
      --with-http_sub_module \
      --with-http_dav_module \
      --with-http_flv_module \
      --with-http_mp4_module \
      --with-http_gunzip_module \
      --with-http_gzip_static_module \
      --with-http_random_index_module \
      --with-http_secure_link_module \
      --with-http_stub_status_module \
      --with-http_auth_request_module \
      --with-http_xslt_module=dynamic \
      --with-http_image_filter_module=dynamic \
      --with-http_geoip_module=dynamic \
      --with-http_perl_module=dynamic \
      --with-threads \
      --with-stream \
      --with-stream_ssl_module \
      --with-http_slice_module \
      --with-mail \
      --with-mail_ssl_module \
      --with-file-aio \
      --with-http_v2_module \
      --with-ipv6 \
      --with-ld-opt="-Wl,-rpath,$LUAJIT_LIB" \
      --add-module=$NGINX_DEVEL_KIT_PATH \
      --add-module=$NGINX_LUA_MODULE_PATH && make && make install

- name: Create user nginx
  shell: useradd --no-create-home nginx && sed -i "/modules-enabled/d" /etc/nginx/nginx.conf

- name: Create directory
  file: path=/var/cache/nginx
        state=directory
        mode=0755
        owner=root
        group=root

- name: Reload nginx
  shell: nginx -s reload

#  notify:
#    - Restart nginx


